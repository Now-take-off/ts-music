[{"D:\\桌面\\practice\\ts-music\\src\\index.tsx":"1","D:\\桌面\\practice\\ts-music\\src\\reportWebVitals.ts":"2","D:\\桌面\\practice\\ts-music\\src\\App.tsx":"3","D:\\桌面\\practice\\ts-music\\src\\assets\\iconfont\\iconfont.ts":"4","D:\\桌面\\practice\\ts-music\\src\\style.ts":"5","D:\\桌面\\practice\\ts-music\\src\\routes\\index.tsx":"6","D:\\桌面\\practice\\ts-music\\src\\application\\Singers\\index.tsx":"7","D:\\桌面\\practice\\ts-music\\src\\application\\Recommend\\index.tsx":"8","D:\\桌面\\practice\\ts-music\\src\\application\\Rank\\index.tsx":"9","D:\\桌面\\practice\\ts-music\\src\\application\\Home\\index.tsx":"10","D:\\桌面\\practice\\ts-music\\src\\application\\Home\\style.ts":"11","D:\\桌面\\practice\\ts-music\\src\\assets\\global-style.ts":"12","D:\\桌面\\practice\\ts-music\\src\\store\\index.ts":"13","D:\\桌面\\practice\\ts-music\\src\\store\\reducer.ts":"14","D:\\桌面\\practice\\ts-music\\src\\components\\slider\\index.tsx":"15","D:\\桌面\\practice\\ts-music\\src\\components\\slider\\style.ts":"16","D:\\桌面\\practice\\ts-music\\src\\components\\list\\index.tsx":"17","D:\\桌面\\practice\\ts-music\\src\\components\\list\\style.ts":"18","D:\\桌面\\practice\\ts-music\\src\\api\\utils.ts":"19","D:\\桌面\\practice\\ts-music\\src\\baseUI\\scroll\\index.tsx":"20","D:\\桌面\\practice\\ts-music\\src\\application\\Recommend\\store\\index.ts":"21","D:\\桌面\\practice\\ts-music\\src\\application\\Recommend\\store\\actionCreators.ts":"22","D:\\桌面\\practice\\ts-music\\src\\application\\Recommend\\store\\constants.ts":"23","D:\\桌面\\practice\\ts-music\\src\\application\\Recommend\\store\\reducer.ts":"24","D:\\桌面\\practice\\ts-music\\src\\api\\request.ts":"25","D:\\桌面\\practice\\ts-music\\src\\api\\config.ts":"26","D:\\桌面\\practice\\ts-music\\src\\baseUI\\loading\\index.tsx":"27","D:\\桌面\\practice\\ts-music\\src\\baseUI\\horizen-item\\index.tsx":"28","D:\\桌面\\practice\\ts-music\\src\\baseUI\\horizen-item\\style.ts":"29","D:\\桌面\\practice\\ts-music\\src\\application\\Singers\\style.ts":"30","D:\\桌面\\practice\\ts-music\\src\\application\\Singers\\store\\index.ts":"31","D:\\桌面\\practice\\ts-music\\src\\application\\Singers\\store\\reducer.ts":"32","D:\\桌面\\practice\\ts-music\\src\\application\\Singers\\store\\actionCreators.ts":"33","D:\\桌面\\practice\\ts-music\\src\\application\\Singers\\store\\constants.ts":"34","D:\\桌面\\practice\\ts-music\\src\\baseUI\\scroll\\style.ts":"35","D:\\桌面\\practice\\ts-music\\src\\baseUI\\loading-v2\\index.tsx":"36","D:\\桌面\\practice\\ts-music\\src\\application\\Rank\\store\\index.ts":"37","D:\\桌面\\practice\\ts-music\\src\\application\\Rank\\store\\actionCreators.ts":"38","D:\\桌面\\practice\\ts-music\\src\\application\\Rank\\store\\reducer.ts":"39","D:\\桌面\\practice\\ts-music\\src\\application\\Rank\\store\\constants.ts":"40","D:\\桌面\\practice\\ts-music\\src\\application\\Rank\\style.ts":"41","D:\\桌面\\practice\\ts-music\\src\\application\\Rank\\type.ts":"42","D:\\桌面\\practice\\ts-music\\src\\application\\Album\\index.tsx":"43","D:\\桌面\\practice\\ts-music\\src\\application\\Album\\style.ts":"44","D:\\桌面\\practice\\ts-music\\src\\baseUI\\header\\index.tsx":"45","D:\\桌面\\practice\\ts-music\\src\\application\\Album\\store\\index.tsx":"46","D:\\桌面\\practice\\ts-music\\src\\application\\Album\\store\\constants.ts":"47","D:\\桌面\\practice\\ts-music\\src\\application\\Album\\store\\reducer.ts":"48","D:\\桌面\\practice\\ts-music\\src\\application\\Album\\store\\actionCreators.ts":"49","D:\\桌面\\practice\\ts-music\\src\\application\\Singer\\index.tsx":"50","D:\\桌面\\practice\\ts-music\\src\\application\\Singer\\style.ts":"51","D:\\桌面\\practice\\ts-music\\src\\application\\SongList\\index.tsx":"52","D:\\桌面\\practice\\ts-music\\src\\application\\SongList\\style.ts":"53","D:\\桌面\\practice\\ts-music\\src\\application\\Singer\\store\\index.ts":"54","D:\\桌面\\practice\\ts-music\\src\\application\\Singer\\store\\actionCreators.ts":"55","D:\\桌面\\practice\\ts-music\\src\\application\\Singer\\store\\reducer.ts":"56","D:\\桌面\\practice\\ts-music\\src\\application\\Singer\\store\\constants.ts":"57","D:\\桌面\\practice\\ts-music\\src\\application\\Singer\\types\\index.ts":"58","D:\\桌面\\practice\\ts-music\\src\\application\\Player\\store\\index.tsx":"59","D:\\桌面\\practice\\ts-music\\src\\application\\Player\\store\\reducer.ts":"60","D:\\桌面\\practice\\ts-music\\src\\application\\Player\\store\\actionCreators.ts":"61","D:\\桌面\\practice\\ts-music\\src\\application\\Player\\store\\constants.ts":"62","D:\\桌面\\practice\\ts-music\\src\\application\\Player\\index.tsx":"63","D:\\桌面\\practice\\ts-music\\src\\application\\Player\\miniPlayer\\index.tsx":"64","D:\\桌面\\practice\\ts-music\\src\\application\\Player\\miniPlayer\\style.ts":"65","D:\\桌面\\practice\\ts-music\\src\\application\\Player\\normalPlayer\\index.tsx":"66","D:\\桌面\\practice\\ts-music\\src\\application\\Player\\normalPlayer\\style.ts":"67","D:\\桌面\\practice\\ts-music\\src\\baseUI\\progress-circle\\index.tsx":"68","D:\\桌面\\practice\\ts-music\\src\\baseUI\\progressBar\\index.tsx":"69","D:\\桌面\\practice\\ts-music\\src\\baseUI\\Toast\\index.tsx":"70","D:\\桌面\\practice\\ts-music\\src\\baseUI\\music-note\\index.tsx":"71","D:\\桌面\\practice\\ts-music\\src\\application\\Player\\play-list\\index.tsx":"72","D:\\桌面\\practice\\ts-music\\src\\application\\Player\\play-list\\style.ts":"73","D:\\桌面\\practice\\ts-music\\src\\baseUI\\confirm\\index.tsx":"74","D:\\桌面\\practice\\ts-music\\src\\api\\lyric-parser.ts":"75","D:\\桌面\\practice\\ts-music\\src\\application\\Search\\index.tsx":"76","D:\\桌面\\practice\\ts-music\\src\\application\\Search\\store\\index.ts":"77","D:\\桌面\\practice\\ts-music\\src\\application\\Search\\style.ts":"78","D:\\桌面\\practice\\ts-music\\src\\baseUI\\search-box\\index.tsx":"79","D:\\桌面\\practice\\ts-music\\src\\application\\Search\\store\\actionCreators.ts":"80","D:\\桌面\\practice\\ts-music\\src\\application\\Search\\store\\reducer.ts":"81","D:\\桌面\\practice\\ts-music\\src\\application\\Search\\store\\constants.ts":"82"},{"size":433,"mtime":1610954603228,"results":"83","hashOfConfig":"84"},{"size":425,"mtime":499162500000,"results":"85","hashOfConfig":"84"},{"size":648,"mtime":1611285954754,"results":"86","hashOfConfig":"84"},{"size":9457,"mtime":1609122188355,"results":"87","hashOfConfig":"84"},{"size":1274,"mtime":1609121825330,"results":"88","hashOfConfig":"84"},{"size":1822,"mtime":1612147714846,"results":"89","hashOfConfig":"84"},{"size":3923,"mtime":1611648398515,"results":"90","hashOfConfig":"84"},{"size":1991,"mtime":1611648294091,"results":"91","hashOfConfig":"84"},{"size":2961,"mtime":1611648607861,"results":"92","hashOfConfig":"84"},{"size":1047,"mtime":1612144500653,"results":"93","hashOfConfig":"84"},{"size":1014,"mtime":1609147168062,"results":"94","hashOfConfig":"84"},{"size":1085,"mtime":1612167014969,"results":"95","hashOfConfig":"84"},{"size":359,"mtime":1609150150044,"results":"96","hashOfConfig":"84"},{"size":876,"mtime":1611913516061,"results":"97","hashOfConfig":"84"},{"size":1152,"mtime":1611909316761,"results":"98","hashOfConfig":"84"},{"size":852,"mtime":1609232443981,"results":"99","hashOfConfig":"84"},{"size":1894,"mtime":1611563253712,"results":"100","hashOfConfig":"84"},{"size":1515,"mtime":1610333221475,"results":"101","hashOfConfig":"84"},{"size":3210,"mtime":1611909531262,"results":"102","hashOfConfig":"84"},{"size":3596,"mtime":1611048573605,"results":"103","hashOfConfig":"84"},{"size":180,"mtime":1609291482505,"results":"104","hashOfConfig":"84"},{"size":1247,"mtime":1611194918355,"results":"105","hashOfConfig":"84"},{"size":206,"mtime":1610334522681,"results":"106","hashOfConfig":"84"},{"size":689,"mtime":1610696440130,"results":"107","hashOfConfig":"84"},{"size":1641,"mtime":1612159005482,"results":"108","hashOfConfig":"84"},{"size":2275,"mtime":1612167972322,"results":"109","hashOfConfig":"84"},{"size":836,"mtime":1610334208009,"results":"110","hashOfConfig":"84"},{"size":1368,"mtime":1610352610934,"results":"111","hashOfConfig":"84"},{"size":646,"mtime":1610950450146,"results":"112","hashOfConfig":"84"},{"size":1220,"mtime":1611648481675,"results":"113","hashOfConfig":"84"},{"size":180,"mtime":1610355202264,"results":"114","hashOfConfig":"84"},{"size":1239,"mtime":1611913318334,"results":"115","hashOfConfig":"84"},{"size":3151,"mtime":1611913056024,"results":"116","hashOfConfig":"84"},{"size":425,"mtime":1610437613648,"results":"117","hashOfConfig":"84"},{"size":472,"mtime":1610358539122,"results":"118","hashOfConfig":"84"},{"size":1150,"mtime":1610440180482,"results":"119","hashOfConfig":"84"},{"size":180,"mtime":1610442879067,"results":"120","hashOfConfig":"84"},{"size":721,"mtime":1610698383718,"results":"121","hashOfConfig":"84"},{"size":520,"mtime":1610962346409,"results":"122","hashOfConfig":"84"},{"size":120,"mtime":1610443110261,"results":"123","hashOfConfig":"84"},{"size":2262,"mtime":1611648598508,"results":"124","hashOfConfig":"84"},{"size":542,"mtime":1610697576694,"results":"125","hashOfConfig":"84"},{"size":4744,"mtime":1611642926515,"results":"126","hashOfConfig":"84"},{"size":5698,"mtime":1610956180078,"results":"127","hashOfConfig":"84"},{"size":1376,"mtime":1611025284501,"results":"128","hashOfConfig":"84"},{"size":180,"mtime":1610960352488,"results":"129","hashOfConfig":"84"},{"size":132,"mtime":1610960387930,"results":"130","hashOfConfig":"84"},{"size":550,"mtime":1611193838809,"results":"131","hashOfConfig":"84"},{"size":762,"mtime":1610964562252,"results":"132","hashOfConfig":"84"},{"size":4990,"mtime":1611648321192,"results":"133","hashOfConfig":"84"},{"size":2290,"mtime":1611648137794,"results":"134","hashOfConfig":"84"},{"size":2190,"mtime":1611642250454,"results":"135","hashOfConfig":"84"},{"size":2498,"mtime":1611646352263,"results":"136","hashOfConfig":"84"},{"size":180,"mtime":1611194055017,"results":"137","hashOfConfig":"84"},{"size":905,"mtime":1611565782831,"results":"138","hashOfConfig":"84"},{"size":638,"mtime":1611197758514,"results":"139","hashOfConfig":"84"},{"size":192,"mtime":1611135991422,"results":"140","hashOfConfig":"84"},{"size":370,"mtime":1611211888677,"results":"141","hashOfConfig":"84"},{"size":181,"mtime":1611281987803,"results":"142","hashOfConfig":"84"},{"size":1671,"mtime":1612167955237,"results":"143","hashOfConfig":"84"},{"size":2859,"mtime":1612167875934,"results":"144","hashOfConfig":"84"},{"size":578,"mtime":1612167812063,"results":"145","hashOfConfig":"84"},{"size":7829,"mtime":1612168544224,"results":"146","hashOfConfig":"84"},{"size":2195,"mtime":1611804481109,"results":"147","hashOfConfig":"84"},{"size":1868,"mtime":1611294820228,"results":"148","hashOfConfig":"84"},{"size":9669,"mtime":1612168439594,"results":"149","hashOfConfig":"84"},{"size":6511,"mtime":1612168174172,"results":"150","hashOfConfig":"84"},{"size":1255,"mtime":1611306097606,"results":"151","hashOfConfig":"84"},{"size":3821,"mtime":1611557881259,"results":"152","hashOfConfig":"84"},{"size":1582,"mtime":1611569180137,"results":"153","hashOfConfig":"84"},{"size":2717,"mtime":1611649248247,"results":"154","hashOfConfig":"84"},{"size":7924,"mtime":1611733978759,"results":"155","hashOfConfig":"84"},{"size":2612,"mtime":1611730456135,"results":"156","hashOfConfig":"84"},{"size":3042,"mtime":1611729760684,"results":"157","hashOfConfig":"84"},{"size":4165,"mtime":1612168644375,"results":"158","hashOfConfig":"84"},{"size":6444,"mtime":1612165757183,"results":"159","hashOfConfig":"84"},{"size":180,"mtime":1611912955301,"results":"160","hashOfConfig":"84"},{"size":2406,"mtime":1612160871069,"results":"161","hashOfConfig":"84"},{"size":2571,"mtime":1611910031255,"results":"162","hashOfConfig":"84"},{"size":1596,"mtime":1612161269569,"results":"163","hashOfConfig":"84"},{"size":771,"mtime":1612160138033,"results":"164","hashOfConfig":"84"},{"size":251,"mtime":1611913003766,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"1y9e6w4",{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"168"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"168"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"168"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"168"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"225","usedDeprecatedRules":"168"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"168"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"168"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"168"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"168"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"D:\\桌面\\practice\\ts-music\\src\\index.tsx",[],["340","341"],"D:\\桌面\\practice\\ts-music\\src\\reportWebVitals.ts",[],"D:\\桌面\\practice\\ts-music\\src\\App.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\assets\\iconfont\\iconfont.ts",[],"D:\\桌面\\practice\\ts-music\\src\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\routes\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Singers\\index.tsx",["342","343"],"import React, { memo, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { withRouter, RouteComponentProps } from 'react-router'\r\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config'\r\nimport Horizen from '../../baseUI/horizen-item'\r\nimport Scroll from '../../baseUI/scroll'\r\nimport Loading from '../../baseUI/loading'\r\nimport { categoryTypes, alphaTypes } from '../../api/config'\r\n\r\nimport { actionCreators } from './store'\r\nimport { IRootState } from '../../store/type'\r\n\r\nimport {\r\n  NavContainer,\r\n  ListItem,\r\n  ListContainer,\r\n  List\r\n} from './style'\r\n\r\n\r\nconst Singers = (props: RouteConfigComponentProps & RouteComponentProps) => {\r\n  const { history, route } = props\r\n  const enterDetail = (id: number) => {\r\n    history.push(`/singers/${id}`)\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n  const {\r\n    singerList,\r\n    enterLoading,\r\n    pullUpLoading,\r\n    pullDownLoading,\r\n    pageCount,\r\n    category,\r\n    alpha,\r\n    play,\r\n  } = useSelector((state: IRootState) => ({ ...state.singers, play: state.player.playList.length }))\r\n\r\n\r\n  // 第一次加载歌手列表\r\n  useEffect(() => {\r\n    if (!singerList.length) {\r\n      dispatch(actionCreators.getHotSingerList())\r\n    }\r\n  }, [])\r\n\r\n  // 上拉加载\r\n  const handlePullUp = () => {\r\n    dispatch(actionCreators.changePullUpLoading(true))\r\n    dispatch(actionCreators.changeSingerPageCount(pageCount + 1))\r\n    if (category === '') {\r\n      dispatch(actionCreators.refreshMoreHotSingerList())\r\n    } else {\r\n      dispatch(actionCreators.refreshMoreSingerList(category, alpha))\r\n    }\r\n  }\r\n  // 下拉刷新\r\n  const handlePullDown = () => {\r\n    dispatch(actionCreators.changePullDownLoading(true))\r\n    dispatch(actionCreators.changeSingerPageCount(0))\r\n    if (category === '' && alpha === '') {\r\n      dispatch(actionCreators.getHotSingerList())\r\n    } else {\r\n      dispatch(actionCreators.getSingerList(category, alpha))\r\n    }\r\n  }\r\n\r\n  // 更新分类\r\n  const updateDispatch = (category: string, alpha: string) => {\r\n    dispatch(actionCreators.changeSingerPageCount(0))\r\n    dispatch(actionCreators.changeEnterLoading(true))\r\n    dispatch(actionCreators.getSingerList(category, alpha))\r\n  }\r\n\r\n  let handleUpdateCatetory = (val: string) => {\r\n    dispatch(actionCreators.changeCategory(val))\r\n    updateDispatch(val, alpha)\r\n  }\r\n\r\n  let handleUpdateAlpha = (val: string) => {\r\n    dispatch(actionCreators.changeAlpha(val))\r\n    updateDispatch(category, val)\r\n  }\r\n\r\n  // 渲染函数，返回歌手列表\r\n  const renderSingerList = () => {\r\n    return (\r\n      <List>\r\n        {\r\n          singerList.map((item, index) => {\r\n            return (\r\n              <ListItem key={item.accountId + \"\" + index} onClick={() => { enterDetail(item.id) }}>\r\n                <div className=\"img_wrapper\">\r\n                  <img src={`${item.picUrl}?param=300x300`} width=\"100%\" height=\"100%\" alt=\"music\" />\r\n                </div>\r\n                <span className=\"name\">{item.name}</span>\r\n              </ListItem>\r\n            )\r\n          })\r\n        }\r\n      </List>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <NavContainer>\r\n      <Horizen\r\n        list={categoryTypes}\r\n        title={\"分类 (默认热门):\"}\r\n        oldVal={category}\r\n        handleClick={handleUpdateCatetory}\r\n      ></Horizen>\r\n      <Horizen\r\n        list={alphaTypes}\r\n        title={\"首字母:\"}\r\n        oldVal={alpha}\r\n        handleClick={handleUpdateAlpha}\r\n      ></Horizen>\r\n      <ListContainer play={play}>\r\n        <Scroll\r\n          pullUp={handlePullUp}\r\n          pullDown={handlePullDown}\r\n          pullUpLoading={pullUpLoading}\r\n          pullDownLoading={pullDownLoading}\r\n        >\r\n          {renderSingerList()}\r\n        </Scroll>\r\n        {enterLoading && <Loading />}\r\n      </ListContainer>\r\n      {renderRoutes(route!.routes)}\r\n    </NavContainer>\r\n  )\r\n}\r\n\r\nexport default withRouter(Singers)","D:\\桌面\\practice\\ts-music\\src\\application\\Recommend\\index.tsx",["344"],"\r\nimport React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { forceCheck } from 'react-lazyload';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config'\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\n\r\nimport { actionCreators } from './store'\r\nimport { IRootState } from '../../store/type';\r\n\r\nimport Silder from '../../components/slider'\r\nimport RecommendList from '../../components/list'\r\nimport Scroll from '../../baseUI/scroll'\r\nimport Loading from '../../baseUI/loading'\r\n\r\ninterface IContent {\r\n  play: number\r\n}\r\n\r\nexport const Content = styled.div<IContent>`\r\n    position: fixed;\r\n    top: 93px;\r\n    left: 0;\r\n    bottom: ${({ play }) => play ? '60px' : 0};\r\n    width: 100%;\r\n`\r\n\r\n\r\nconst Recommend = (props: RouteConfigComponentProps & RouteComponentProps) => {\r\n  const { route } = props\r\n\r\n  const {\r\n    bannerList,\r\n    recommendList,\r\n    enterLoading,\r\n    play\r\n  } = useSelector((state: IRootState) => ({ ...state.recommend, play: state.player.playList.length }))\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!bannerList.length) {\r\n      getBannerDataDispatch();\r\n    }\r\n    if (!recommendList.length) {\r\n      getRecommendListDataDispatch();\r\n    }\r\n  }, []);\r\n\r\n  const getBannerDataDispatch = () => {\r\n    dispatch(actionCreators.getBannerList());\r\n  };\r\n\r\n  const getRecommendListDataDispatch = () => {\r\n    dispatch(actionCreators.getRecommendList())\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Content play={play}>\r\n      {\r\n        !enterLoading && <Scroll className=\"list\" onScroll={forceCheck}>\r\n          <div>\r\n            <Silder bannerList={bannerList} />\r\n            <RecommendList recommendList={recommendList} />\r\n          </div>\r\n        </Scroll>\r\n      }\r\n      { enterLoading ? <Loading></Loading> : null}\r\n      {renderRoutes(route!.routes)}\r\n    </Content>\r\n  )\r\n}\r\n\r\nexport default withRouter(Recommend) ","D:\\桌面\\practice\\ts-music\\src\\application\\Rank\\index.tsx",["345"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { withRouter, RouteComponentProps } from 'react-router'\r\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config'\r\n\r\nimport { IRootState } from '../../store/type'\r\nimport { actionCreators } from './store'\r\nimport { IRankListItem, ITracksItem } from './type'\r\nimport { filterInde } from '../../api/utils'\r\n\r\nimport Scroll from '../../baseUI/scroll'\r\nimport Loading from '../../baseUI/loading'\r\n\r\n\r\nimport { List, ListItem, SongList, Container, EnterLoading } from './style'\r\n\r\nconst Rank = (props: RouteConfigComponentProps & RouteComponentProps) => {\r\n  const { history, route } = props\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const { rankList, loading, play } = useSelector((state: IRootState) => ({ ...state.rank, play: state.player.playList.length }))\r\n\r\n  let globalStartIndex = filterInde(rankList);\r\n  let officialList = rankList.slice(0, globalStartIndex);\r\n  let globalList = rankList.slice(globalStartIndex);\r\n\r\n  useEffect(() => {\r\n    if (!rankList.length) {\r\n      dispatch(actionCreators.getRankList())\r\n    }\r\n  }, [])\r\n\r\n  const enterDetail = (id: number) => {\r\n    history.push(`/rank/${id}`)\r\n  }\r\n\r\n  // 这是渲染榜单列表函数，传入 global 变量来区分不同的布局方式\r\n  const renderRankList = (list: IRankListItem[], global?: boolean) => {\r\n    return (\r\n      <List globalRank={global}>\r\n        {\r\n          list.map((item) => {\r\n            return (\r\n              <ListItem key={item.id} tracks={item.tracks} onClick={() => enterDetail(item.id)}>\r\n                <div className=\"img_wrapper\">\r\n                  <img src={item.coverImgUrl} alt=\"\" />\r\n                  <div className=\"decorate\"></div>\r\n                  <span className=\"update_frequecy\">{item.updateFrequency}</span>\r\n                </div>\r\n                { renderSongList(item.tracks)}\r\n              </ListItem>\r\n            )\r\n          })\r\n        }\r\n      </List>\r\n    )\r\n  }\r\n\r\n  const renderSongList = (list: ITracksItem[]) => {\r\n    return list.length ? (\r\n      <SongList>\r\n        {\r\n          list.map((item, index) => {\r\n            return <li key={index}>{index + 1}. {item.first} - {item.second}</li>\r\n          })\r\n        }\r\n      </SongList>\r\n    ) : null;\r\n  }\r\n  // 榜单数据未加载出来之前都给隐藏\r\n  let displayStyle = loading ? { \"display\": \"none\" } : { \"display\": \"\" };\r\n  return (\r\n    <Container play={play}>\r\n      <Scroll>\r\n        <div>\r\n          <h1 className=\"offical\" style={displayStyle}> 官方榜 </h1>\r\n          {renderRankList(officialList)}\r\n          <h1 className=\"global\" style={displayStyle}> 全球榜 </h1>\r\n          {renderRankList(globalList, true)}\r\n          {loading ? <EnterLoading><Loading></Loading></EnterLoading> : null}\r\n        </div>\r\n      </Scroll>\r\n      {renderRoutes(route!.routes)}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default withRouter(Rank)","D:\\桌面\\practice\\ts-music\\src\\application\\Home\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Home\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\assets\\global-style.ts",["346"],"D:\\桌面\\practice\\ts-music\\src\\store\\index.ts",[],"D:\\桌面\\practice\\ts-music\\src\\store\\reducer.ts",[],"D:\\桌面\\practice\\ts-music\\src\\components\\slider\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\components\\slider\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\components\\list\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\components\\list\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\api\\utils.ts",[],"D:\\桌面\\practice\\ts-music\\src\\baseUI\\scroll\\index.tsx",["347"],"import React, {\r\n  forwardRef,\r\n  useEffect,\r\n  useState,\r\n  useRef,\r\n  ReactNode,\r\n  useImperativeHandle,\r\n  useMemo\r\n} from 'react'\r\nimport BScroll from 'better-scroll'\r\nimport { ScrollContainer, PullUpLoading, PullDownLoading } from './style'\r\n\r\nimport Loading from '../loading'\r\nimport LoadingV2 from '../loading-v2'\r\n\r\nimport { Debounce } from '../../api/utils'\r\n\r\ntype direction = 'vertical' | 'horizontal'\r\n\r\ninterface IScrollProps {\r\n  direction?: direction;\r\n  click?: boolean;\r\n  refresh?: boolean; // 是否刷新\r\n  pullUpLoading?: boolean;\r\n  pullDownLoading?: boolean;\r\n  bounceTop?: boolean;\r\n  bounceBottom?: boolean;\r\n  onScroll?: Function;\r\n  pullUp?: () => void;\r\n  pullDown?: () => void;\r\n  className?: string;\r\n  children: ReactNode;\r\n}\r\n\r\nexport interface IScrollHandles {\r\n  refresh(): void;\r\n  getBScroll(): BScroll | undefined\r\n}\r\n\r\nconst Scroll = forwardRef<IScrollHandles, IScrollProps>((props, ref) => {\r\n  const {\r\n    direction = \"vertical\",\r\n    click = true,\r\n    refresh = true,\r\n    pullUpLoading = false,\r\n    pullDownLoading = false,\r\n    bounceTop = true,\r\n    bounceBottom = true,\r\n    onScroll = null,\r\n    pullUp = null,\r\n    pullDown = null,\r\n  } = props\r\n  const [bScroll, setBScroll] = useState<BScroll | null>(null)\r\n  const scrollContaninerRef = useRef<HTMLDivElement>(null)\r\n  useEffect(() => {\r\n    const scroll = new BScroll(scrollContaninerRef.current!, {\r\n      scrollX: direction === 'horizontal',\r\n      scrollY: direction === 'vertical',\r\n      probeType: 3,\r\n      click: click,\r\n      bounce: {\r\n        top: bounceTop,\r\n        bottom: bounceBottom,\r\n      }\r\n    })\r\n    setBScroll(scroll);\r\n    return () => {\r\n      setBScroll(null)\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    if (refresh && bScroll) {\r\n      bScroll.refresh()\r\n    }\r\n  })\r\n  useEffect(() => {\r\n    if (onScroll && bScroll) {\r\n      bScroll.on('scroll', onScroll)\r\n      return () => {\r\n        bScroll.off('scroll', onScroll)\r\n      }\r\n    }\r\n  }, [onScroll, bScroll])\r\n\r\n  useEffect(() => {\r\n    if (bScroll && pullDown) {\r\n      bScroll.on('touchEnd', (pos: { x: number, y: number }) => {\r\n        if (pos.y > 50) {\r\n          pullDown()\r\n        }\r\n      })\r\n      return () => {\r\n        bScroll.off('touchEnd')\r\n      }\r\n    }\r\n  }, [bScroll, pullDown])\r\n\r\n\r\n  // 不然拿到的始终是第一次 pullUp 函数的引用，相应的闭包作用域变量都是第一次的，产生闭包陷阱。下同。根据依赖执行\r\n  let pullUpDebounce = useMemo(() => {\r\n    return Debounce.use(pullUp!, 300)\r\n  }, [pullUp])\r\n\r\n  //进行上拉到底的判断，调用上拉加载的函数\r\n  useEffect(() => {\r\n    if (!bScroll || !pullUp) return\r\n    bScroll.on('scrollEnd', () => {\r\n      // 判断是否滑到底部\r\n      if (bScroll.y <= bScroll.maxScrollY + 100) {\r\n        pullUpDebounce()\r\n      }\r\n    })\r\n    return () => {\r\n      bScroll.off('scrollEnd')\r\n    }\r\n  }, [bScroll, pullUp, pullUpDebounce])\r\n  // 暴漏方法\r\n  useImperativeHandle(\r\n    ref,\r\n    () => {\r\n      return {\r\n        refresh() {\r\n          if (bScroll) {\r\n            bScroll.refresh()\r\n            bScroll.scrollTo(0, 0)\r\n          }\r\n        },\r\n        getBScroll() {\r\n          if (bScroll) {\r\n            return bScroll\r\n          }\r\n        }\r\n      }\r\n    }\r\n  )\r\n\r\n\r\n\r\n\r\n  return (\r\n    <ScrollContainer ref={scrollContaninerRef}>\r\n      {props.children}\r\n      {pullUpLoading && <PullUpLoading><Loading></Loading></PullUpLoading>}\r\n      {pullDownLoading && <PullDownLoading><LoadingV2></LoadingV2></PullDownLoading>}\r\n    </ScrollContainer>\r\n  )\r\n})\r\nexport default Scroll","D:\\桌面\\practice\\ts-music\\src\\application\\Recommend\\store\\index.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Recommend\\store\\actionCreators.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Recommend\\store\\constants.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Recommend\\store\\reducer.ts",[],"D:\\桌面\\practice\\ts-music\\src\\api\\request.ts",[],"D:\\桌面\\practice\\ts-music\\src\\api\\config.ts",[],"D:\\桌面\\practice\\ts-music\\src\\baseUI\\loading\\index.tsx",["348"],"import React,{FC, memo} from 'react'\r\nimport styled, { keyframes } from'styled-components';\r\nimport style from '../../assets/global-style';\r\n\r\nconst loading = keyframes`\r\n  0%, 100% {\r\n    transform: scale(0.0);\r\n  }\r\n  50% {\r\n    transform: scale(1.0);\r\n  }\r\n`\r\nconst LoadingWrapper = styled.div`\r\n  >div {\r\n    position: fixed;\r\n    z-index: 1000;\r\n    left: 0; \r\n    right: 0;  \r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    width: 60px;\r\n    height: 60px;\r\n    opacity: 0.6;\r\n    border-radius: 50%;\r\n    background-color: ${style [\"theme-color\"]};\r\n    animation: ${loading} 1.4s infinite ease-in;\r\n  }\r\n  > div:nth-child(2) {\r\n    animation-delay: -0.7s;\r\n  }\r\n`\r\n\r\nconst Loading:FC = () => {\r\n  return (\r\n    <LoadingWrapper>\r\n    <div></div>\r\n    <div></div>\r\n  </LoadingWrapper>\r\n  )\r\n}\r\n\r\nexport default memo(Loading)\r\n","D:\\桌面\\practice\\ts-music\\src\\baseUI\\horizen-item\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\baseUI\\horizen-item\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Singers\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Singers\\store\\index.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Singers\\store\\reducer.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Singers\\store\\actionCreators.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Singers\\store\\constants.ts",[],"D:\\桌面\\practice\\ts-music\\src\\baseUI\\scroll\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\baseUI\\loading-v2\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Rank\\store\\index.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Rank\\store\\actionCreators.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Rank\\store\\reducer.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Rank\\store\\constants.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Rank\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Rank\\type.ts",["349"],"D:\\桌面\\practice\\ts-music\\src\\application\\Album\\index.tsx",["350"],"import React, { useState, useRef, memo, useEffect, useCallback } from 'react'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Header from '../../baseUI/header'\r\nimport Scroll from '../../baseUI/scroll';\r\nimport Loading from '../../baseUI/loading';\r\nimport MusicNote, { IMusicNoteHandle } from '../../baseUI/music-note'\r\nimport SongsList from '../SongList'\r\nimport { isEmptyObject } from '../../api/utils'\r\n\r\nimport { IAlbumProps } from './types'\r\nimport { IRootState } from '../../store/type'\r\nimport { actionCreators } from './store'\r\n\r\nimport style from \"../../assets/global-style\";\r\nimport { Container, TopDesc, Menu } from './style'\r\n\r\n\r\nconst Album = (props: IAlbumProps & RouteComponentProps) => {\r\n  const { history, match } = props\r\n\r\n  const dispatch = useDispatch()\r\n  const { currentAlbum, enterLoading } = useSelector((state: IRootState) => state.album)\r\n\r\n  const [showStatus, setShowStatus] = useState(true)\r\n  const [title, setTitle] = useState(\"歌单\");\r\n  const [isMarquee, setIsMarquee] = useState(false);// 是否跑马灯\r\n\r\n\r\n  const headerEl = useRef<HTMLDivElement>(null)\r\n  const musicNoteRef = useRef<IMusicNoteHandle>(null)\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCreators.changeEnterLoading(true))\r\n    dispatch(actionCreators.getAlbumList(match.params.id))\r\n  }, [])\r\n\r\n  const handleBack = useCallback(() => {\r\n    setShowStatus(false)\r\n  }, [])\r\n\r\n  const musicAnimation = (x: number, y: number) => {\r\n    musicNoteRef.current!.startAnimation(x, y)\r\n  }\r\n\r\n  // 上拉动画\r\n  const handleScroll = useCallback((pos: { y: number }) => {\r\n    const HEADER_HEIGHT = 45;\r\n    let minScrollY = -HEADER_HEIGHT\r\n    let percent = Math.abs(pos.y / minScrollY)\r\n    let headerDom = headerEl.current\r\n    if (pos.y < minScrollY) {\r\n      headerDom!.style.backgroundColor = style[\"theme-color\"]\r\n      headerDom!.style.opacity = Math.min(1, (percent - 1) / 2).toString()\r\n      setTitle(currentAlbum.name)\r\n      setIsMarquee(true)\r\n    } else {\r\n      headerDom!.style.backgroundColor = \"\";\r\n      headerDom!.style.opacity = '1';\r\n      setTitle(\"歌单\");\r\n      setIsMarquee(false);\r\n    }\r\n  }, [currentAlbum])\r\n\r\n\r\n\r\n\r\n  const renderTopDesc = () => {\r\n    return (\r\n      <TopDesc background={currentAlbum.coverImgUrl}>\r\n        <div className=\"background\">\r\n          <div className=\"filter\"></div>\r\n        </div>\r\n        <div className=\"img_wrapper\">\r\n          <div className=\"decorate\"></div>\r\n          <img src={currentAlbum.coverImgUrl} alt=\"\" />\r\n          <div className=\"play_count\">\r\n            <i className=\"iconfont play\">&#xe885;</i>\r\n            <span className=\"count\">{Math.floor(currentAlbum.subscribedCount / 1000) / 10} 万 </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"desc_wrapper\">\r\n          <div className=\"title\">{currentAlbum.name}</div>\r\n          <div className=\"person\">\r\n            <div className=\"avatar\">\r\n              <img src={currentAlbum.creator.avatarUrl} alt=\"\" />\r\n            </div>\r\n            <div className=\"name\">{currentAlbum.creator.nickname}</div>\r\n          </div>\r\n        </div>\r\n      </TopDesc>\r\n    )\r\n  }\r\n  const renderMenu = () => {\r\n    return (\r\n      <Menu>\r\n        <div>\r\n          <i className=\"iconfont\">&#xe6ad;</i>\r\n      评论\r\n    </div>\r\n        <div>\r\n          <i className=\"iconfont\">&#xe86f;</i>\r\n      点赞\r\n    </div>\r\n        <div>\r\n          <i className=\"iconfont\">&#xe62d;</i>\r\n      收藏\r\n    </div>\r\n        <div>\r\n          <i className=\"iconfont\">&#xe606;</i>\r\n      更多\r\n    </div>\r\n      </Menu>\r\n    )\r\n  }\r\n\r\n  const renderSongList = () => {\r\n    return (\r\n      <SongsList\r\n        songs={currentAlbum.tracks}\r\n        collectCount={currentAlbum.subscribedCount}\r\n        showCollect={true}\r\n        showBackground={true}\r\n        musicAnimation={musicAnimation}\r\n      ></SongsList>\r\n    )\r\n  }\r\n  return (\r\n    <CSSTransition\r\n      in={showStatus}\r\n      timeout={300}\r\n      classNames=\"fly\"\r\n      appear={true}\r\n      unmountOnExit\r\n      onExited={history.goBack}\r\n    >\r\n      <Container>\r\n        <Header ref={headerEl} title={title} handleClick={handleBack} isMarquee={isMarquee}></Header>\r\n        {\r\n          !isEmptyObject(currentAlbum) && <Scroll bounceTop={false} onScroll={handleScroll}>\r\n            <div>\r\n              {renderTopDesc()}\r\n              {renderMenu()}\r\n              {renderSongList()}\r\n            </div>\r\n          </Scroll>\r\n        }\r\n\r\n        {enterLoading ? <Loading></Loading> : null}\r\n        <MusicNote ref={musicNoteRef}></MusicNote>\r\n      </Container>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nexport default memo(Album)\r\n","D:\\桌面\\practice\\ts-music\\src\\application\\Album\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\baseUI\\header\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Album\\store\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Album\\store\\constants.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Album\\store\\reducer.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Album\\store\\actionCreators.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Singer\\index.tsx",["351"],"import React, { useState, useRef, useEffect, useCallback } from 'react'\r\nimport { withRouter, RouteComponentProps } from 'react-router'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Scroll, { IScrollHandles } from '../../baseUI/scroll'\r\nimport Header from '../../baseUI/header'\r\nimport Loading from '../../baseUI/loading'\r\nimport SongsList from '../SongList'\r\nimport MusicNote, { IMusicNoteHandle } from '../../baseUI/music-note'\r\n\r\nimport { HEADER_HEIGHT } from \"./../../api/config\";\r\nimport { IRootState } from '../../store/type'\r\nimport { ISingerProps } from './types'\r\n\r\nimport { getSingerInfo, changeLoading } from './store/actionCreators'\r\n\r\n\r\nimport {\r\n  Container,\r\n  ImgWrapper,\r\n  CollectButton,\r\n  SongListWrapper,\r\n  BgLayer\r\n} from './style'\r\n\r\nconst Singer = (props: (ISingerProps & RouteComponentProps)) => {\r\n  const dispatch = useDispatch()\r\n  const {\r\n    artist,\r\n    songs,\r\n    loading,\r\n    play\r\n  } = useSelector((state: IRootState) => ({ ...state.singer, play: state.player.playList.length }))\r\n\r\n  const { history, match } = props\r\n  const [showStatus, setShowStatus] = useState(true)\r\n\r\n\r\n  const header = useRef<HTMLDivElement>(null)\r\n  const imageWrapper = useRef<HTMLDivElement>(null)\r\n  const collectButton = useRef<HTMLDivElement>(null)\r\n  const layer = useRef<HTMLDivElement>(null)\r\n  const songScrollWrapper = useRef<HTMLDivElement>(null)\r\n\r\n  const songScroll = useRef<IScrollHandles>(null)\r\n  const musicNoteRef = useRef<IMusicNoteHandle>(null)\r\n\r\n  // 图片初始高度\r\n  const initialHeight = useRef(0)\r\n  // 往上偏移的尺寸，露出圆角\r\n  const OFFSET = 5\r\n\r\n  // 初始化样式\r\n  useEffect(() => {\r\n    let h = imageWrapper.current!.offsetHeight;\r\n    initialHeight.current = h;\r\n    songScrollWrapper.current!.style.top = `${h - OFFSET}px`;\r\n    // 把遮罩先放在下面，以裹住歌曲列表\r\n    layer.current!.style.top = `${h - OFFSET}px`;\r\n    songScroll.current?.refresh();\r\n  }, []);\r\n\r\n  //请求数据\r\n  useEffect(() => {\r\n    dispatch(changeLoading(true))\r\n    dispatch(getSingerInfo(match.params.id))\r\n  }, [match.params.id])\r\n\r\n\r\n  // 滑动样式\r\n  const handleScroll = useCallback((pos: { x: number, y: number }) => {\r\n    let height = initialHeight.current\r\n    const newY = pos.y\r\n    const imageDOM = imageWrapper.current\r\n    const buttonDOM = collectButton.current\r\n    const headerDOM = header.current\r\n    const layerDOM = layer.current\r\n    const minScrollY = -(height - OFFSET) + HEADER_HEIGHT\r\n    // 指的是滑动距离占图片高度的百分比\r\n    const percent = Math.abs(newY / height);\r\n    // 向下滑动\r\n    if (newY > 0) {\r\n      imageDOM!.style[\"transform\"] = `scale(${1 + percent})`\r\n      buttonDOM!.style[\"transform\"] = `translate3d(0,${newY}px,0)`\r\n      layerDOM!.style.top = `${height - OFFSET + newY}px`;\r\n    } else if (newY >= minScrollY) {\r\n      layerDOM!.style.top = `${height - OFFSET - Math.abs(newY)}px`\r\n      layerDOM!.style.zIndex = '1'\r\n      imageDOM!.style.paddingTop = \"75%\"\r\n      imageDOM!.style.height = '0'\r\n      imageDOM!.style.zIndex = '-1'\r\n      buttonDOM!.style[\"transform\"] = `translate3d(0,${newY}px,0)`\r\n      buttonDOM!.style[\"opacity\"] = `${1 - percent * 2}`\r\n    } else if (newY < minScrollY) {\r\n      layerDOM!.style.top = `${HEADER_HEIGHT - OFFSET}px`\r\n      layerDOM!.style.zIndex = '1'\r\n      headerDOM!.style.zIndex = '100'\r\n      imageDOM!.style.height = `${HEADER_HEIGHT}px`\r\n      imageDOM!.style.paddingTop = '0'\r\n      imageDOM!.style.zIndex = '99'\r\n    }\r\n  }, [])\r\n\r\n  const setShowStatusFalse = useCallback(() => {\r\n    setShowStatus(false);\r\n  }, []);\r\n\r\n  const musicAnimation = (x: number, y: number) => [\r\n    musicNoteRef.current!.startAnimation(x, y)\r\n  ]\r\n  return (\r\n    <CSSTransition\r\n      in={showStatus}\r\n      timeout={300}\r\n      appear={true}\r\n      unmountOnExit\r\n      classNames=\"fly\"\r\n      onExited={() => history.goBack()}\r\n    >\r\n      <Container play={play}>\r\n        <Header\r\n          handleClick={setShowStatusFalse}\r\n          title={artist.name}\r\n          ref={header}\r\n        ></Header>\r\n        <ImgWrapper ref={imageWrapper} bgUrl={artist.picUrl}>\r\n          <div className=\"filter\"></div>\r\n        </ImgWrapper>\r\n        <CollectButton ref={collectButton}>\r\n          <i className=\"iconfont\">&#xe62d;</i>\r\n          <span className=\"text\"> 收藏 </span>\r\n        </CollectButton>\r\n        <BgLayer ref={layer}></BgLayer>\r\n        <SongListWrapper ref={songScrollWrapper}>\r\n          <Scroll ref={songScroll} onScroll={handleScroll}>\r\n            <SongsList\r\n              musicAnimation={musicAnimation}\r\n              songs={songs}\r\n              showCollect={false}\r\n            ></SongsList>\r\n          </Scroll>\r\n        </SongListWrapper>\r\n        {loading && <Loading></Loading>}\r\n        <MusicNote ref={musicNoteRef}></MusicNote>\r\n      </Container>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nexport default withRouter(Singer)\r\n","D:\\桌面\\practice\\ts-music\\src\\application\\Singer\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\SongList\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\application\\SongList\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Singer\\store\\index.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Singer\\store\\actionCreators.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Singer\\store\\reducer.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Singer\\store\\constants.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Singer\\types\\index.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Player\\store\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Player\\store\\reducer.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Player\\store\\actionCreators.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Player\\store\\constants.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Player\\index.tsx",["352"],"D:\\桌面\\practice\\ts-music\\src\\application\\Player\\miniPlayer\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Player\\miniPlayer\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Player\\normalPlayer\\index.tsx",["353"],"D:\\桌面\\practice\\ts-music\\src\\application\\Player\\normalPlayer\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\baseUI\\progress-circle\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\baseUI\\progressBar\\index.tsx",["354","355"],"import React, { useEffect, useRef, useState, TouchEvent, MouseEvent } from 'react';\r\nimport styled from 'styled-components';\r\nimport style from '../../assets/global-style';\r\nimport { prefixStyle } from './../../api/utils';\r\n\r\ninterface ITouch {\r\n  initiated: boolean;\r\n  startX: number;\r\n  left: number;\r\n}\r\n\r\ninterface IProgressBarProps {\r\n  percentChange: (percent: number) => void;\r\n  percent: number;\r\n}\r\n\r\nconst ProgressBarWrapper = styled.div`\r\n  height:30px;\r\n  .bar-inner {\r\n    position:relative;\r\n    top:13px;\r\n    height:4px;\r\n    background:rgba(0,0,0,.3);\r\n    .progress {\r\n      position:absolute;\r\n      height:100%;\r\n      background:${style[\"theme-color\"]};\r\n    }\r\n    .progress-btn-wrapper {\r\n      position: absolute;\r\n      left: -15px;\r\n      top: -13px;\r\n      width: 30px;\r\n      height: 30px;\r\n      .progress-btn {\r\n        position: relative;\r\n        top: 7px;\r\n        left: 7px;\r\n        box-sizing: border-box;\r\n        width: 16px;\r\n        height: 16px;\r\n        border: 3px solid ${style[\"border-color\"]};\r\n        border-radius: 50%;\r\n        background: ${style[\"theme-color\"]};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst ProgressBar = (props: IProgressBarProps) => {\r\n  const { percentChange, percent } = props\r\n\r\n  const progressBar = useRef<HTMLDivElement>(null);\r\n  const progress = useRef<HTMLDivElement>(null);\r\n  const progressBtn = useRef<HTMLDivElement>(null);\r\n\r\n  const [touch, setTouch] = useState<ITouch>();\r\n\r\n  // const progressBtnWidth = 15;\r\n  useEffect(() => {\r\n    if (percent >= 0 && percent <= 1 && !touch?.initiated) {\r\n      const barWidth = progressBar.current!.clientWidth\r\n      const offsetWidth = percent * barWidth;\r\n      _offset(offsetWidth)\r\n    }\r\n  }, [percent])\r\n\r\n  const _changePercent = () => {\r\n    const barWidth = progressBar.current!.clientWidth;\r\n    const curPercent = progress.current!.clientWidth / barWidth; // 新的进度计算\r\n    percentChange(curPercent)\r\n  }\r\n\r\n  const progressTouchStart = (event: TouchEvent) => {\r\n    const startTouch = {\r\n      initiated: false,\r\n      startX: 0,\r\n      left: 0\r\n    };\r\n    startTouch.initiated = true //表示滑动动作开始\r\n    startTouch.startX = event.touches[0].pageX\r\n    startTouch.left = progress.current!.clientWidth\r\n    setTouch(startTouch)\r\n\r\n  }\r\n  const progressTouchMove = (event: TouchEvent) => {\r\n    if (!touch!.initiated) return\r\n    // 滑动距离\r\n    const deltaX = event.touches[0].pageX - touch!.startX;\r\n    const barWidth = progressBar.current!.clientWidth;\r\n    const offsetWidth = Math.min(Math.max(0, touch!.left + deltaX), barWidth)\r\n    _offset(offsetWidth)\r\n  }\r\n\r\n  const progressTouchEnd = (event: TouchEvent) => {\r\n    const endTouch: ITouch = JSON.parse(JSON.stringify(touch))\r\n    endTouch.initiated = false\r\n    setTouch(endTouch)\r\n    _changePercent()\r\n  }\r\n\r\n  const progressClick = (event: MouseEvent) => {\r\n    const rect = progressBar.current!.getBoundingClientRect();\r\n    const offsetWidth = Math.min(Math.max(0, event.pageX - rect.left), rect.width)\r\n    _offset(offsetWidth)\r\n    _changePercent()\r\n  }\r\n  // 进度条偏移量\r\n  const _offset = (offsetWidth: number) => {\r\n    progress.current!.style.width = `${offsetWidth}px`;\r\n    progressBtn.current!.style.transform = `translate3d(${offsetWidth}px,0,0)`\r\n  }\r\n\r\n  return (\r\n    <ProgressBarWrapper>\r\n      <div className=\"bar-inner\" ref={progressBar} onClick={progressClick}>\r\n        <div className=\"progress\" ref={progress}></div>\r\n        <div className=\"progress-btn-wrapper\"\r\n          ref={progressBtn}\r\n          onTouchStart={progressTouchStart}\r\n          onTouchMove={progressTouchMove}\r\n          onTouchEnd={progressTouchEnd}\r\n        >\r\n          <div className=\"progress-btn\"></div>\r\n        </div>\r\n      </div>\r\n    </ProgressBarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProgressBar\r\n","D:\\桌面\\practice\\ts-music\\src\\baseUI\\Toast\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\baseUI\\music-note\\index.tsx",["356"],"import React, { forwardRef, memo, useEffect, useImperativeHandle, useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { prefixStyle } from '../../api/utils'\r\nimport style from '../../assets/global-style'\r\n\r\nconst Container = styled.div`\r\n  .icon_wrapper {\r\n    position:fixed;\r\n    z-index:1000;\r\n    margin-top:-10px;\r\n    margin-left:-10px;\r\n    color:${style[\"theme-color\"]};\r\n    font-size:14px;\r\n    display:none;\r\n    transition:transform 1s cubic-bezier(.62,-0.1,.86,.57);\r\n    transform:translate3d(0,0,0);\r\n  }\r\n  > div  {\r\n    transition:transform 1s\r\n  }\r\n`\r\n\r\nexport interface IMusicNoteHandle {\r\n  startAnimation: (x: number, y: number) => void\r\n}\r\ntype IIcon = HTMLDivElement & { running?: boolean }\r\n\r\n\r\nconst MusicNote = forwardRef<IMusicNoteHandle>((props, ref) => {\r\n  const ICON_NUMBER = 3\r\n  const transform = prefixStyle('transform')\r\n  const iconsRef = useRef(document.createElement('div'))\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < ICON_NUMBER; i++) {\r\n      let node: IIcon = createNode(`<div class=\"iconfont\">&#xe642;</div>`)!\r\n\r\n      iconsRef.current!.appendChild(node!)\r\n      let domArray: IIcon[] = [].slice.call(iconsRef.current?.children)\r\n      domArray.forEach((item) => {\r\n        item.running = false\r\n        item.addEventListener('transitionend', function () {\r\n          this.style.display = 'none';\r\n          this.style[transform] = 'translate3d(0,0,0)';\r\n          this['running'] = false\r\n          let icon = this.querySelector('div');\r\n          icon!.style[transform] = 'translate3d(0,0,0)';\r\n        }, false)\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  // 原生dom操作，返回一个dom节点对象\r\n  const createNode = (txt: string) => {\r\n    const template = `<div class='icon_wrapper'>${txt}</div>`\r\n    const tempNode = document.createElement('div')\r\n    tempNode.innerHTML = template\r\n    return tempNode.firstChild as HTMLDivElement\r\n  }\r\n\r\n  const startAnimation = (x: number, y: number) => {\r\n    for (let i = 0; i < ICON_NUMBER; i++) {\r\n      let domArray = [...iconsRef.current!.children]\r\n      let item = domArray[i] as IIcon\r\n\r\n      if (item.running === false) {\r\n\r\n        item.style.left = x + \"px\"\r\n        item.style.top = y + \"px\"\r\n        item.style.display = \"inline-block\"\r\n\r\n        setTimeout(() => {\r\n          item.running = true\r\n          item.style[transform] = `translate3d(0,750px,0)`\r\n          let icon = item.querySelector('div')\r\n          icon!.style[transform] = `translate3d(-40px,0,0)`\r\n        }, 20)\r\n        break\r\n      }\r\n    }\r\n  }\r\n  useImperativeHandle(ref, () => ({\r\n    startAnimation\r\n  }))\r\n  return (\r\n    <Container ref={iconsRef}>\r\n    </Container>\r\n  )\r\n})\r\n\r\nexport default memo(MusicNote)\r\n","D:\\桌面\\practice\\ts-music\\src\\application\\Player\\play-list\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Player\\play-list\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\baseUI\\confirm\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\api\\lyric-parser.ts",["357","358","359"],"D:\\桌面\\practice\\ts-music\\src\\application\\Search\\index.tsx",["360"],"D:\\桌面\\practice\\ts-music\\src\\application\\Search\\store\\index.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Search\\style.ts",[],"D:\\桌面\\practice\\ts-music\\src\\baseUI\\search-box\\index.tsx",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Search\\store\\actionCreators.ts",["361","362","363"],"D:\\桌面\\practice\\ts-music\\src\\application\\Search\\store\\reducer.ts",[],"D:\\桌面\\practice\\ts-music\\src\\application\\Search\\store\\constants.ts",[],{"ruleId":"364","replacedBy":"365"},{"ruleId":"366","replacedBy":"367"},{"ruleId":"368","severity":1,"message":"369","line":1,"column":17,"nodeType":"370","messageId":"371","endLine":1,"endColumn":21},{"ruleId":"372","severity":1,"message":"373","line":45,"column":6,"nodeType":"374","endLine":45,"endColumn":8,"suggestions":"375"},{"ruleId":"372","severity":1,"message":"376","line":50,"column":6,"nodeType":"374","endLine":50,"endColumn":8,"suggestions":"377"},{"ruleId":"372","severity":1,"message":"378","line":32,"column":6,"nodeType":"374","endLine":32,"endColumn":8,"suggestions":"379"},{"ruleId":"380","severity":1,"message":"381","line":31,"column":1,"nodeType":"382","endLine":50,"endColumn":2},{"ruleId":"372","severity":1,"message":"383","line":70,"column":6,"nodeType":"374","endLine":70,"endColumn":8,"suggestions":"384"},{"ruleId":"385","severity":1,"message":"386","line":26,"column":25,"nodeType":"387","messageId":"388","endLine":26,"endColumn":46,"fix":"389"},{"ruleId":"368","severity":1,"message":"390","line":1,"column":10,"nodeType":"370","messageId":"371","endLine":1,"endColumn":14},{"ruleId":"372","severity":1,"message":"391","line":40,"column":6,"nodeType":"374","endLine":40,"endColumn":8,"suggestions":"392"},{"ruleId":"372","severity":1,"message":"393","line":68,"column":6,"nodeType":"374","endLine":68,"endColumn":23,"suggestions":"394"},{"ruleId":"372","severity":1,"message":"395","line":84,"column":6,"nodeType":"374","endLine":84,"endColumn":30,"suggestions":"396"},{"ruleId":"397","severity":1,"message":"398","line":209,"column":27,"nodeType":"399","endLine":211,"endColumn":11},{"ruleId":"368","severity":1,"message":"400","line":4,"column":10,"nodeType":"370","messageId":"371","endLine":4,"endColumn":21},{"ruleId":"372","severity":1,"message":"401","line":66,"column":6,"nodeType":"374","endLine":66,"endColumn":15,"suggestions":"402"},{"ruleId":"372","severity":1,"message":"403","line":54,"column":6,"nodeType":"374","endLine":54,"endColumn":8,"suggestions":"404"},{"ruleId":"405","severity":1,"message":"406","line":11,"column":40,"nodeType":"407","messageId":"408","endLine":11,"endColumn":41,"suggestions":"409"},{"ruleId":"405","severity":1,"message":"410","line":11,"column":42,"nodeType":"407","messageId":"408","endLine":11,"endColumn":43,"suggestions":"411"},{"ruleId":"368","severity":1,"message":"412","line":148,"column":5,"nodeType":"370","messageId":"371","endLine":148,"endColumn":15},{"ruleId":"372","severity":1,"message":"413","line":52,"column":6,"nodeType":"374","endLine":52,"endColumn":8,"suggestions":"414"},{"ruleId":"368","severity":1,"message":"415","line":10,"column":3,"nodeType":"370","messageId":"371","endLine":10,"endColumn":26},{"ruleId":"368","severity":1,"message":"416","line":11,"column":3,"nodeType":"370","messageId":"371","endLine":11,"endColumn":23},{"ruleId":"368","severity":1,"message":"417","line":16,"column":10,"nodeType":"370","messageId":"371","endLine":16,"endColumn":20},"no-native-reassign",["418"],"no-negated-in-lhs",["419"],"@typescript-eslint/no-unused-vars","'memo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'singerList.length'. Either include them or remove the dependency array.","ArrayExpression",["420"],"React Hook useEffect has missing dependencies: 'bannerList.length', 'getBannerDataDispatch', 'getRecommendListDataDispatch', and 'recommendList.length'. Either include them or remove the dependency array.",["421"],"React Hook useEffect has missing dependencies: 'dispatch' and 'rankList.length'. Either include them or remove the dependency array.",["422"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'bounceBottom', 'bounceTop', 'click', and 'direction'. Either include them or remove the dependency array.",["423"],"no-whitespace-before-property","Unexpected whitespace before property \"theme-color\".","MemberExpression","unexpectedWhitespace",{"range":"424","text":"425"},"'type' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.",["426"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["427"],"React Hook useEffect has missing dependencies: 'dispatch', 'getLyric', 'preSong?.id', and 'speed'. Either include them or remove the dependency array.",["428"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","'prefixStyle' is defined but never used.","React Hook useEffect has a missing dependency: 'touch?.initiated'. Either include it or remove the dependency array.",["429"],"React Hook useEffect has a missing dependency: 'transform'. Either include it or remove the dependency array.",["430"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["431","432"],"Unnecessary escape character: \\:.",["433","434"],"'startStamp' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'hotList.length'. Either include them or remove the dependency array.",["435"],"'getHotSingerListRequest' is defined but never used.","'getSingerListRequest' is defined but never used.","'IRootState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},[541,542],"",{"desc":"444","fix":"445"},{"desc":"444","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"messageId":"453","fix":"454","desc":"455"},{"messageId":"456","fix":"457","desc":"458"},{"messageId":"453","fix":"459","desc":"455"},{"messageId":"456","fix":"460","desc":"458"},{"desc":"461","fix":"462"},"Update the dependencies array to be: [dispatch, singerList.length]",{"range":"463","text":"464"},"Update the dependencies array to be: [bannerList.length, getBannerDataDispatch, getRecommendListDataDispatch, recommendList.length]",{"range":"465","text":"466"},"Update the dependencies array to be: [dispatch, rankList.length]",{"range":"467","text":"468"},"Update the dependencies array to be: [bounceBottom, bounceTop, click, direction]",{"range":"469","text":"470"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"471","text":"472"},{"range":"473","text":"472"},"Update the dependencies array to be: [playList, currentIndex, preSong?.id, dispatch, speed, getLyric]",{"range":"474","text":"475"},"Update the dependencies array to be: [percent, touch?.initiated]",{"range":"476","text":"477"},"Update the dependencies array to be: [transform]",{"range":"478","text":"479"},"removeEscape",{"range":"480","text":"425"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"481","text":"482"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"483","text":"425"},{"range":"484","text":"482"},"Update the dependencies array to be: [dispatch, hotList.length]",{"range":"485","text":"486"},[1238,1240],"[dispatch, singerList.length]",[1333,1335],"[bannerList.length, getBannerDataDispatch, getRecommendListDataDispatch, recommendList.length]",[1156,1158],"[dispatch, rankList.length]",[1697,1699],"[bounceBottom, bounceTop, click, direction]",[1412,1414],"[dispatch, match.params.id]",[2068,2085],[2447,2471],"[playList, currentIndex, preSong?.id, dispatch, speed, getLyric]",[1713,1722],"[percent, touch?.initiated]",[1610,1612],"[transform]",[166,167],[166,166],"\\",[168,169],[168,168],[1590,1592],"[dispatch, hotList.length]"]